/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantalla;

import Aplicacion.Figura;
import Aplicacion.Operaciones;
import Aplicacion.Punto;
import java.awt.Color;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author pablo
 */
public class PantallaSaltoNeto extends javax.swing.JFrame {

    private Figura PATs1;
    private Figura PATs2;
    private Figura TURGO;
    private Figura PELTON;
    private Figura FRANCIS;
    private Figura BANKI;
    private Figura KAPLAN;
    private boolean[] turbinas;//True si el punto esta en el rango de la tuberia
    private String[] nombreTurbina;
    private float P;
    private Operaciones oper;
    private DecimalFormat df;

    /**
     * Creates new form Pantalla
     */
    public PantallaSaltoNeto() {
        initComponents();
        //Definicion de las figuras
        Punto[] pPATs1 = {new Punto(0.004, 40.0), new Punto(0.01, 4.0), new Punto(0.025, 17.0), new Punto(18.0, 17.0), new Punto(0.5, 550),
            new Punto(0.06, 550.0), new Punto(0.06, 50), new Punto(0.02, 160.0), new Punto(0.01, 160.0), new Punto(0.004, 400.0)};

        Punto[] pPATs2 = {new Punto(0.09, 10.1), new Punto(0.35, 2.9), new Punto(0.49, 2.9), new Punto(0.68, 1.9), new Punto(8.1, 1.9), new Punto(1.81, 10.1)};
        Punto[] pTURGO = {new Punto(0.01, 200), new Punto(0.01, 25), new Punto(10, 25), new Punto(10, 50), new Punto(2, 250), new Punto(0.02, 250)};
        Punto[] pPELTON = {new Punto(0.01, 200), new Punto(0.01, 21), new Punto(0.3, 18), new Punto(0.5, 70), new Punto(5, 500), new Punto(2.8, 1000), new Punto(0.03, 1000)};
        Punto[] pFRANCIS = {new Punto(0.09, 60),/*punto guia*/ new Punto(0.2, 28),/*punto guia*/ new Punto(0.6, 8), new Punto(1.4, 4), new Punto(5, 4), new Punto(28, 90), new Punto(5, 500), new Punto(0.2, 500)};
        Punto[] pBANKI = {new Punto(0.004, 35), new Punto(0.004, 18), new Punto(0.007, 10), new Punto(0.02, 10), new Punto(0.1, 2), new Punto(0.8, 5), new Punto(10, 5), new Punto(9, 12), new Punto(0.5, 200), new Punto(0.2, 300), new Punto(0.04, 300), new Punto(0.01, 200), new Punto(0.01, 35)};
        Punto[] pKAPLAN = {new Punto(0.01, 22), new Punto(0.01, 3), new Punto(0.7, 3), new Punto(1, 2), new Punto(40, 2), new Punto(80, 6), new Punto(80, 15), new Punto(18, 60), new Punto(5, 60)};

        PATs1 = new Figura(pPATs1);
        PATs2 = new Figura(pPATs2);
        TURGO = new Figura(pTURGO);
        PELTON = new Figura(pPELTON);
        FRANCIS = new Figura(pFRANCIS);
        BANKI = new Figura(pBANKI);
        KAPLAN = new Figura(pKAPLAN);

        nombreTurbina = new String[]{"PATs", "TURGO", "PELTON", "FRANCIS", "BANKI", "KAPLAN", "Not one"};
        P = -1;
        oper = new Operaciones();
        df=new DecimalFormat("#.00");//esto es para que solo se muestre 2 decimales
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Altura = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Caudal = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Analizar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        hAnuales = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        iHoras = new javax.swing.JButton();
        pAnual = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tuberiasDisponibles = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Net energy height");

        jLabel2.setText("m");

        jLabel3.setText("Flow rate");

        jLabel4.setText("m^3/s");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N

        jLabel6.setText("Available turbines");

        Analizar.setBackground(new java.awt.Color(255, 255, 255));
        Analizar.setText("Calculate");
        Analizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalizarActionPerformed(evt);
            }
        });

        jLabel8.setText("Annual generated power");

        jLabel11.setText("Daily hours of operation");

        jLabel13.setText("h");

        iHoras.setBackground(new java.awt.Color(255, 255, 255));
        iHoras.setText("Enter hours");
        iHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iHorasActionPerformed(evt);
            }
        });

        pAnual.setEditable(false);
        pAnual.setBackground(new java.awt.Color(200, 200, 200));
        pAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pAnualActionPerformed(evt);
            }
        });

        tuberiasDisponibles.setColumns(10);
        tuberiasDisponibles.setRows(2);
        jScrollPane1.setViewportView(tuberiasDisponibles);

        jButton1.setBackground(new java.awt.Color(102, 102, 102));
        jButton1.setText("Net energy height");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Required energy height");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Grafica/Graficas.jpeg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel5))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Analizar))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(Altura, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Caudal, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel4)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(86, 86, 86)
                                    .addComponent(jLabel6))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(66, 66, 66)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(hAnuales, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(iHoras, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11))
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel13))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(74, 74, 74)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(pAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Altura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Caudal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(98, 98, 98)
                        .addComponent(Analizar)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hAnuales, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addComponent(iHoras)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(pAnual, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalizarActionPerformed
        /////Boton Analizar/////
        try{
        ponerCuadrosBlancos();
        if (this.Altura.getText().equals("") || this.Caudal.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Enter all data");
            if(this.Altura.getText().equals("")) this.Altura.setBackground(Color.red);
            if(this.Caudal.getText().equals("")) this.Caudal.setBackground(Color.red);
        } else {
            ponerCuadrosBlancos();
            Punto p = new Punto(Double.parseDouble(this.Caudal.getText()), Double.parseDouble(this.Altura.getText()));
            turbinas = new boolean[7];//reseteo las tuberias

            calcularTuberias(p);
            P = oper.calcularPotencia(p);
            mostrarTueberias();
            this.pAnual.setText(null);

        }
        
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, "The data must be numeric");
        }


    }//GEN-LAST:event_AnalizarActionPerformed

    private void iHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iHorasActionPerformed
 
        ponerCuadrosBlancos();
        if (this.hAnuales.getText().equals("")) {
            this.hAnuales.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "Enter the daily hours of operation");
        } else {
            float horas = Float.parseFloat(this.hAnuales.getText());
            if (horas > 24 || horas<0) {
                 this.hAnuales.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "One day only has 24 hours");
            } else {
                if (P == -1) {
                    JOptionPane.showMessageDialog(null, "Analyze the data first");
                     this.Analizar.setBackground(Color.red);
                } else {
                    this.pAnual.setText(null);
                    if (this.turbinas[turbinas.length - 1] == true) {
                        this.pAnual.setText("N");
                    } else {
                        //potenciaAnual=horasDiarias*diasDelAño*Potencai
                        Float PA = (float) (horas * 365 * P) / 1000;
                       if(PA>=1)
                            this.pAnual.setText(df.format(PA).toString() + "  " + "MW");
                        else
                             this.pAnual.setText("0"+df.format(PA).toString() + "  " + "MW");
                    }
                }
            }
        }
    }//GEN-LAST:event_iHorasActionPerformed

    private void pAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pAnualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pAnualActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        PantallaSaltoBruto sb=new PantallaSaltoBruto(this);
        this.setVisible(false);
        sb.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    //
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Altura;
    private javax.swing.JButton Analizar;
    private javax.swing.JTextField Caudal;
    private javax.swing.JTextField hAnuales;
    private javax.swing.JButton iHoras;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField pAnual;
    private javax.swing.JTextArea tuberiasDisponibles;
    // End of variables declaration//GEN-END:variables

    private void calcularTuberias(Punto p) {
        int cont = 0;
        if (PATs1.dentro(p)) {
            turbinas[0] = true;
            cont++;
        }
        if (PATs2.dentro(p)) {
            turbinas[0] = true;
            cont++;
        }
        if (TURGO.dentro(p)) {
            turbinas[1] = true;
            cont++;
        }
        if (PELTON.dentro(p)) {
            turbinas[2] = true;
            cont++;
        }
        if (FRANCIS.dentro(p)) {
            turbinas[3] = true;
            cont++;
        }
        if (BANKI.dentro(p)) {
            turbinas[4] = true;
            cont++;
        }
        if (KAPLAN.dentro(p)) {
            turbinas[5] = true;
            cont++;
        }

        if (cont == 0) {
            turbinas[6] = true;//esta tuberia dice si no hay ninguna disponible
        }
    }

    private void mostrarTueberias() {
        //Mostraremos las tuberias y al lado la potencia que tiene

        //Esto es para cambiar las unidades
        String[] unidad = new String[]{"kW", "MW", "W"};
        int sUnidad = 0;
        float auxP = P;
        if (P >= 1000) {
            auxP = P / 1000;
            sUnidad = 1;
        } else if (P < 1) {
            auxP = P * 1000;
            sUnidad = 2;
        }
        //Vamos a escribir las tuberias con la potencia al lado
        String mensaje = "";
        tuberiasDisponibles.removeAll();
        for (int i = 0; i < turbinas.length; i++) {
            if (turbinas[i] == true) {
                if (i != turbinas.length - 1) {
                    mensaje = mensaje + nombreTurbina[i] + " of " + auxP + " " + unidad[sUnidad] + "\n";
                } else//Si es la posicion de ninguna tuberia no se pone la potencia
                {
                    mensaje = nombreTurbina[i];
                }
            }
        }

        tuberiasDisponibles.setText(mensaje);

    }

    private void ponerCuadrosBlancos() {
        this.Altura.setBackground(Color.white);
        this.Caudal.setBackground(Color.white);
        this.hAnuales.setBackground(Color.white);
        this.Analizar.setBackground(Color.white);
    }
    
     public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PantallaSaltoNeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PantallaSaltoNeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PantallaSaltoNeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PantallaSaltoNeto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new PantallaSaltoNeto().setVisible(true);
            }
        });
    }

}
